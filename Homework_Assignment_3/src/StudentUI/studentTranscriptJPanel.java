/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package StudentUI;

import business.admin;
import business.course;
import business.courseDirectory;
import business.student;
import business.studentDirectory;
import business.thirdParty;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kaush
 */
public class studentTranscriptJPanel extends javax.swing.JPanel {

    /**
     * Creates new form studentTranscriptJPanel
     */
    JPanel cardContainer;
    private studentDirectory studentHistory;
    private student userStudent;
    private courseDirectory courseHistory;
    private course selectedCourse;
    private admin Admin;
    private thirdParty ThirdParty;
    
    public studentTranscriptJPanel(JPanel cardContainer, studentDirectory studentHistory, student userStudent, courseDirectory courseHistory, admin Admin, thirdParty ThirdParty) {
        initComponents();
        this.cardContainer = cardContainer;
        this.studentHistory = studentHistory;
        this.userStudent = userStudent;
        this.courseHistory = courseHistory;
        this.Admin = Admin;
        this.ThirdParty = ThirdParty;
        
        populateTableCompletedCourses();
        showGradCertButtons();
        showTranscriptButtons();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentCompletedCourses = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnRequestTranscript = new javax.swing.JButton();
        btnLogouttr = new javax.swing.JButton();
        btnBacktr = new javax.swing.JButton();
        btnGrades = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtRating = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtTranscriptRequestMessage = new javax.swing.JTextField();
        btnViewTranscript = new javax.swing.JButton();
        txtGraduationRequestMessage = new javax.swing.JTextField();
        btnRequestGraduationCert = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblStudentCompletedCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Professor Name", "Semester", "Grades"
            }
        ));
        jScrollPane1.setViewportView(tblStudentCompletedCourses);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 118, 660, 281));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Completed Courses");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 20, 370, -1));

        btnRequestTranscript.setBackground(new java.awt.Color(102, 255, 51));
        btnRequestTranscript.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRequestTranscript.setText("Request Transcript");
        btnRequestTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTranscriptActionPerformed(evt);
            }
        });
        add(btnRequestTranscript, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 528, -1, -1));

        btnLogouttr.setBackground(new java.awt.Color(255, 204, 204));
        btnLogouttr.setText("Logout");
        btnLogouttr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogouttrActionPerformed(evt);
            }
        });
        add(btnLogouttr, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 20, -1, -1));

        btnBacktr.setBackground(new java.awt.Color(102, 204, 255));
        btnBacktr.setText("Back");
        btnBacktr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBacktrActionPerformed(evt);
            }
        });
        add(btnBacktr, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        btnGrades.setBackground(new java.awt.Color(102, 153, 255));
        btnGrades.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnGrades.setText("Rate Course");
        btnGrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGradesActionPerformed(evt);
            }
        });
        add(btnGrades, new org.netbeans.lib.awtextra.AbsoluteConstraints(576, 427, 134, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Rating");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 474, -1, -1));

        txtRating.setEnabled(false);
        add(txtRating, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 474, 50, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("/ 4");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 474, 30, -1));

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 474, 100, -1));

        txtTranscriptRequestMessage.setEditable(false);
        add(txtTranscriptRequestMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 528, 396, -1));

        btnViewTranscript.setText("View Transcript");
        btnViewTranscript.setEnabled(false);
        btnViewTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTranscriptActionPerformed(evt);
            }
        });
        add(btnViewTranscript, new org.netbeans.lib.awtextra.AbsoluteConstraints(599, 528, -1, -1));

        txtGraduationRequestMessage.setEditable(false);
        add(txtGraduationRequestMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 591, 396, -1));

        btnRequestGraduationCert.setText("Request Graduation Certificate");
        btnRequestGraduationCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestGraduationCertActionPerformed(evt);
            }
        });
        add(btnRequestGraduationCert, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 591, 252, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogouttrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogouttrActionPerformed
        // TODO add your handling code here:
        StudentLoginJPanel logOutPanel= new StudentLoginJPanel(cardContainer, studentHistory, courseHistory, Admin, ThirdParty);
        cardContainer.removeAll();
        cardContainer.add(logOutPanel);

    }//GEN-LAST:event_btnLogouttrActionPerformed

    private void btnBacktrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBacktrActionPerformed
        // TODO add your handling code here:
        cardContainer.remove(this);
        CardLayout layout = (CardLayout) cardContainer.getLayout();
        layout.previous(cardContainer);

    }//GEN-LAST:event_btnBacktrActionPerformed

    private void btnGradesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGradesActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblStudentCompletedCourses.getSelectedRow();

        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select the course");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblStudentCompletedCourses.getModel();
        String courseID = (String) model.getValueAt(selectedRowIndex, 0);

        ArrayList<course> completedCoursesList = userStudent.getCompletedCourses();
        ArrayList<course> ratedCoursesList = userStudent.getRatedCourses();

        for (course Course : completedCoursesList){
            if (Course.getCourseID().equals(courseID)){
                this.selectedCourse = Course;
                break;
            }
        }
        
        for (course Course : ratedCoursesList){
            if (Course.getCourseID().equals(courseID)){
                JOptionPane.showMessageDialog(this, "You have already rated this course");
                return;
            }
        }

        txtRating.setEnabled(true);
        btnSave.setEnabled(true);

    }//GEN-LAST:event_btnGradesActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        Double grades = Double.parseDouble(txtRating.getText());
        if (grades < 0 || grades > 4){
            JOptionPane.showMessageDialog(this, "Please enter valid grades");
            return;
        }
        this.selectedCourse.addCourseRating(grades);
        userStudent.addRatedCourses(selectedCourse);
        
        JOptionPane.showMessageDialog(this, "Course graded");
        txtRating.setEnabled(false);
        btnSave.setEnabled(false);
        txtRating.setText("");


    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRequestTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTranscriptActionPerformed
        // TODO add your handling code here:
        
        
        Admin.addStudentTranscriptRequest(userStudent);
        userStudent.setTranscriptRequestStatus("Pending");
        JOptionPane.showMessageDialog(this, "Transcript Requested");
        userStudent.setIsTranscriptRequested(true);
        btnRequestTranscript.setEnabled(false);
        txtTranscriptRequestMessage.setText("Your Transcript request is pending with admin");
        
    }//GEN-LAST:event_btnRequestTranscriptActionPerformed

    private void btnViewTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTranscriptActionPerformed
        // TODO add your handling code here:
        
        studentViewTranscriptPanel StudentViewTranscriptPanel = new studentViewTranscriptPanel(cardContainer, studentHistory, courseHistory, userStudent, Admin, ThirdParty);
        cardContainer.add("studentViewTranscriptPanel", StudentViewTranscriptPanel);
        CardLayout layout = (CardLayout) cardContainer.getLayout();
        layout.next(cardContainer);
        
    }//GEN-LAST:event_btnViewTranscriptActionPerformed

    private void btnRequestGraduationCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestGraduationCertActionPerformed
        // TODO add your handling code here:
        
        
        ThirdParty.addStudentGraduationRequest(userStudent);
        userStudent.setGradduationCertRequestStatus("Pending");
        JOptionPane.showMessageDialog(this, "Graduation Certificate Requested");
        userStudent.setIsGraduationCertRequested(true);
        btnRequestGraduationCert.setEnabled(false);
        txtGraduationRequestMessage.setText("Your Graduation Certificate request is pending");
        
    }//GEN-LAST:event_btnRequestGraduationCertActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBacktr;
    private javax.swing.JButton btnGrades;
    private javax.swing.JButton btnLogouttr;
    private javax.swing.JButton btnRequestGraduationCert;
    private javax.swing.JButton btnRequestTranscript;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnViewTranscript;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudentCompletedCourses;
    private javax.swing.JTextField txtGraduationRequestMessage;
    private javax.swing.JTextField txtRating;
    private javax.swing.JTextField txtTranscriptRequestMessage;
    // End of variables declaration//GEN-END:variables

    private void populateTableCompletedCourses() {
        
        
        DefaultTableModel model = (DefaultTableModel) tblStudentCompletedCourses.getModel();
        model.setRowCount(0);
        
        ArrayList<course> completedCoursesList = userStudent.getCompletedCourses();
        ArrayList<Double> completedCoursesGradesList = userStudent.getCompletedCoursesGrades();
        
        for (course Course : completedCoursesList){
            Object[] row = new Object[5];
            row[0] = Course.getCourseID();
            row[1] = Course.getCoursename();
            row[2] = Course.getCourseProfessorName();
            row[3] = Course.getCourseSemester();
            row[4] = userStudent.getCourseGrades(Course);
            
            model.addRow(row);
            
        }
        
           
    }

    private void showTranscriptButtons() {
        
        
        if (userStudent.isIsTranscriptRequested() == false){
            return;
        }
        
        if (userStudent.isIsTranscriptRequested()== true && userStudent.getTranscriptRequestStatus().equals("Accepted")){
            btnRequestTranscript.setEnabled(false);
            txtTranscriptRequestMessage.setText("Your Transcript request is accepted by admin");
            btnViewTranscript.setEnabled(true);
        }
        
        if (userStudent.isIsTranscriptRequested() == true && userStudent.getTranscriptRequestStatus().equals("Pending")){
            btnRequestTranscript.setEnabled(false);
            btnViewTranscript.setEnabled(false);
            txtTranscriptRequestMessage.setText("Your Transcript request is pending with admin");
        }
        
        if (userStudent.isIsTranscriptRequested() == true && userStudent.getTranscriptRequestStatus().equals("Rejected")){
            btnRequestTranscript.setEnabled(true);
            btnViewTranscript.setEnabled(false);
            txtTranscriptRequestMessage.setText("Your Transcript request is previously rejected by admin. Request again?");
        }
        
    }

    private void showGradCertButtons() {
        
        
        if (userStudent.isIsGraduationCertRequested() == false){
            return;
        }
        
        if (userStudent.isIsGraduationCertRequested()== true && userStudent.getGradduationCertRequestStatus().equals("Accepted")){
            btnRequestGraduationCert.setEnabled(false);
            txtGraduationRequestMessage.setText("Your Graduation Certificate request is accepted");
        }
        
        if (userStudent.isIsGraduationCertRequested() == true && userStudent.getGradduationCertRequestStatus().equals("Pending")){
            btnRequestGraduationCert.setEnabled(false);
            txtGraduationRequestMessage.setText("Your Graduation Certificate request is pending");
        }
        if (userStudent.isIsGraduationCertRequested() == true && userStudent.getGradduationCertRequestStatus().equals("Rejected")){
            btnRequestGraduationCert.setEnabled(true);
            txtGraduationRequestMessage.setText("Your Graduation Certificate request is previously rejected. Request again?");
        }

    }
}
